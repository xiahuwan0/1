#include<iostream>
using namespace std;
#include<vector>
#include<cstring>
constexpr int MAXSIZE=100001;
vector<int> v[MAXSIZE];
 
int deep=0;  //最大深度
int door;  //最远门
 
void DFS(int door1,int deep1)
{
    //printf("门为%d 深度为%d\n",door,deep);
    if(deep1>deep)
    {
        deep=deep1;
        door=door1;
    }
    for(vector<int>::iterator it=v[door1].begin();it!=v[door1].end();it++)
        DFS(*it,deep1+1);
}
int main()
{
    bool vis[MAXSIZE];   //是否有通向该门的道路
    memset(vis,false,sizeof(vis));
    int N;
    cin>>N;
    for(int i=1;i<=N;i++)
    {
        int k;
        cin>>k;
        while(k--)
        {
            int n;
            cin>>n;
            vis[n]=true;
            v[i].push_back(n);
        }
    }
    //入口
    int i;
    for(i=1;i<=N;i++)
    {
        if(!vis[i])
            break;
    }
    //cout<<"最远的门"<<endl;
    door=i;     //入口
    DFS(i,1);
    cout<<door<<endl;
    return 0;
}